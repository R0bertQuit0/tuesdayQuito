
/*
 * Main.eq
 * Generated by Eqela Studio 2.0b7.4
 */

public class Main :SEScene
{


SESprite fg;
SESprite bg;
bool move_right=true;
bool move_left=false;
bool move_up=true;
bool move_down=false;
int speed=300;
SESprite text;
double rotation;
int bounce=0;
public void initialize(SEResourceCache rsc) {
	base.initialize(rsc);
	bg= add_sprite_for_color(Color.instance("#FF00FF"), get_scene_width(), get_scene_height());
	bg.move(0,0);
	fg= add_sprite_for_color(Color.instance("#33FFFF"), get_scene_width()*0.1, get_scene_height()*0.1);
    fg.move(100,100);

rsc.prepare_font("myfont", "arial bold color=black",40);
text=add_sprite_for_text("BOUNCE=%d".printf().add(Primitive.for_integer(bounce)).to_string(),"myfont");
text.move(100,get_scene_height()-text.get_height());

		}

		public void update(TimeVal now, double delta) {

			base.update(now,delta);
			
		if(move_right) {
					fg.move(fg.get_x()+delta*speed,fg.get_y());
					rotation+=MathConstant.M_PI/45;
				fg.set_rotation(rotation);
		if(	fg.get_x()+fg.get_width()>get_scene_width()) {
			
			
		move_right=false;
		move_left=true;
		speed=300;
			bounce++;
				fg.set_color(Color.instance("#33FFFF"), get_scene_width()*0.1, get_scene_height()*0.1);
		text.set_text("BOUNCE=%d".printf().add(Primitive.for_integer(bounce)).to_string(),"myfont");
	}speed+=30;

	}
	
		if(move_left) {

		fg.move(fg.get_x()-delta*speed,fg.get_y());
	    rotation+=MathConstant.M_PI/45;
		fg.set_rotation(rotation);
		if(fg.get_x()<0){
		move_right=true;
		move_left=false;
		speed=300;
		bounce++;
		fg.set_color(Color.instance("white"), get_scene_width()*0.1, get_scene_height()*0.1);
		text.set_text("BOUNCE=%d".printf().add(Primitive.for_integer(bounce)).to_string(),"myfont");
		}
	    speed+=10;
		}

	
				if(move_down) {
					fg.move(fg.get_x(),fg.get_y()+delta*speed);
					rotation+=MathConstant.M_PI/45;
				    fg.set_rotation(rotation);
			
	        	if(fg.get_y()+fg.get_height()>get_scene_height()) {
			
			
		move_down=false;
		move_up=true;
		speed=300;
			bounce++;
			fg.set_color(Color.instance("blue"), get_scene_width()*0.1, get_scene_height()*0.1);
			text.set_text("BOUNCE=%d".printf().add(Primitive.for_integer(bounce)).to_string(),"myfont");
		}
	speed+=20;

		}

		
		if(move_up) {

		fg.move(fg.get_x(),fg.get_y()-delta*speed);
		rotation+=MathConstant.M_PI/45;
		fg.set_rotation(rotation);
		if(fg.get_y()<0){
		move_down=true;
		move_up=false;
		speed=300;
			bounce++;
				fg.set_color(Color.instance("red"), get_scene_width()*0.1, get_scene_height()*0.1);
			text.set_text("BOUNCE=%d".printf().add(Primitive.for_integer(bounce)).to_string(),"myfont");
		}
	speed+=20;
		}}

public void set_rotation(double angle) {
rotation= angle;

	}
	public double get_rotation() {
		return(rotation);
	}


public void cleanup() {
base.cleanup();
SESprite.remove(fg);
SESprite.remove(bg);
SESprite.remove(text);

	}







		
}